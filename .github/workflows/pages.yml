name: Deploy Flutter Web to Cloudflare Pages and Supabase Functions

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  workflow_run:
    workflows: ["Run Tests"]
    types:
      - completed
    branches: [ main ]

jobs:
  deploy-supabase:
    name: Deploy Supabase Functions
    runs-on: ubuntu-latest
    # Only run if tests passed or if manually triggered
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' || github.event_name == 'push' }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Verify Supabase CLI installation
        run: supabase --version

      - name: Deploy Supabase Functions
        working-directory: ./supabase
        run: |
          # Link to the remote project
          echo "Linking to Supabase project..."
          supabase link --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}
          
          # Deploy all functions
          echo "Deploying Supabase functions..."
          supabase functions deploy --verify-jwt false
          
          echo "✅ Supabase functions deployed successfully"
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

      - name: List deployed functions
        working-directory: ./supabase
        run: |
          echo "Listing deployed functions..."
          supabase functions list
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        continue-on-error: true

  build-and-deploy:
    name: Deploy Flutter Web
    runs-on: ubuntu-latest
    needs: deploy-supabase  # Wait for Supabase functions to deploy first
    # Only run if tests passed or if manually triggered, and Supabase deployment succeeded
    if: ${{ (github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' || github.event_name == 'push') && (needs.deploy-supabase.result == 'success' || needs.deploy-supabase.result == 'skipped') }}
    permissions:
      contents: read
      deployments: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Install dependencies
        working-directory: ./emailinator_flutter
        run: flutter pub get

      - name: Build (web, release)
        working-directory: ./emailinator_flutter
        run: flutter build web --release --dart-define=SUPABASE_URL=${{ secrets.SUPABASE_URL }} --dart-define=SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy emailinator_flutter/build/web --project-name=emailinator
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  deployment-summary:
    name: Deployment Summary
    runs-on: ubuntu-latest
    needs: [deploy-supabase, build-and-deploy]
    if: always()
    
    steps:
      - name: Report deployment status
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.deploy-supabase.result }}" == "success" ]]; then
            echo "✅ **Supabase Functions**: Deployed successfully" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Supabase Functions**: Deployment failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.build-and-deploy.result }}" == "success" ]]; then
            echo "✅ **Flutter Web App**: Deployed successfully" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Flutter Web App**: Deployment failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "All deployments completed!" >> $GITHUB_STEP_SUMMARY
