name: Test and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # Detect what changed
  detect-changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      python-changed: ${{ steps.changes.outputs.python }}
      flutter-changed: ${{ steps.changes.outputs.flutter }}
      supabase-changed: ${{ steps.changes.outputs.supabase }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect file changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            python:
              - 'tools/**'
              - 'requirements.txt'
              - 'pyproject.toml'
              - '**/*.py'
              - '.github/workflows/**'
            flutter:
              - 'emailinator_flutter/**'
              - '.github/workflows/**'
            supabase:
              - 'supabase/**'
              - '.github/workflows/**'

  # Python tests - only run if Python files changed
  python-tests:
    name: Python Tests
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.python-changed == 'true'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Create virtual environment
        run: python -m venv .venv

      - name: Install Python dependencies
        run: |
          source .venv/bin/activate
          pip install --upgrade pip setuptools wheel
          pip install -e .
          pip install -r requirements.txt

      - name: Run Python tests
        run: |
          source .venv/bin/activate
          if [ "$(find tools -maxdepth 1 \( -name 'test_*.py' -o -name '*_test.py' \) | head -1)" ]; then
            echo "Running Python tests..."
            pytest -s
          else
            echo "No Python tests found, skipping..."
          fi

  # Flutter tests - only run if Flutter files changed
  flutter-tests:
    name: Flutter Tests
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.flutter-changed == 'true'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Install Flutter dependencies
        working-directory: ./emailinator_flutter
        run: flutter pub get

      - name: Analyze Flutter code
        working-directory: ./emailinator_flutter
        run: flutter analyze

      - name: Check Flutter formatting
        working-directory: ./emailinator_flutter
        run: dart format --set-exit-if-changed .

      - name: Run Flutter tests
        working-directory: ./emailinator_flutter
        run: flutter test --coverage

  # Supabase tests - only run if Supabase files changed
  supabase-tests:
    name: Supabase Tests
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.supabase-changed == 'true'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Install npm dependencies
        run: npm ci

      - name: Install Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Start Supabase local development
        working-directory: ./supabase
        run: |
          supabase start --exclude gotrue,realtime,storage-api,imgproxy,edge-runtime

      - name: Run Supabase function tests
        run: |
          echo "Testing inbound-email function..."
          npm run test:inbound-email
          
          echo "Testing deposit-budget function..."
          npm run test:deposit-budget
          
          echo "Testing reprocess-unprocessed function..."
          npm run test:reprocess-unprocessed

      - name: Stop Supabase
        working-directory: ./supabase
        run: supabase stop
        if: always()

  # Deploy Supabase - only if Supabase changed AND tests passed
  deploy-supabase:
    name: Deploy Supabase Functions
    runs-on: ubuntu-latest
    needs: [detect-changes, supabase-tests]
    if: ${{ needs.detect-changes.outputs.supabase-changed == 'true' && needs.supabase-tests.result == 'success' && github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Deploy Supabase Functions
        working-directory: ./supabase
        run: |
          echo "Deploying Supabase functions directly..."
          # Deploy functions using config.toml settings (including verify_jwt settings)
          supabase functions deploy --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}
          
          echo "‚úÖ Supabase functions deployed successfully"
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

      - name: List deployed functions
        working-directory: ./supabase
        run: supabase functions list --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        continue-on-error: true

  # Deploy Flutter to Cloudflare - only if Flutter changed AND tests passed
  deploy-flutter:
    name: Deploy Flutter Web to Cloudflare
    runs-on: ubuntu-latest
    needs: [detect-changes, flutter-tests]
    if: ${{ needs.detect-changes.outputs.flutter-changed == 'true' && needs.flutter-tests.result == 'success' && github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    permissions:
      contents: read
      deployments: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Install dependencies
        working-directory: ./emailinator_flutter
        run: flutter pub get

      - name: Build Flutter web
        working-directory: ./emailinator_flutter
        run: flutter build web --release --dart-define=SUPABASE_URL=${{ secrets.SUPABASE_URL }} --dart-define=SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy emailinator_flutter/build/web --project-name=emailinator
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  # Summary job to report what happened
  deployment-summary:
    name: Deployment Summary
    runs-on: ubuntu-latest
    needs: [detect-changes, python-tests, flutter-tests, supabase-tests, deploy-supabase, deploy-flutter]
    if: always()
    
    steps:
      - name: Report status
        run: |
          echo "## Build & Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # What changed
          echo "### üìÅ Files Changed" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ needs.detect-changes.outputs.python-changed }}" == "true" ]]; then
            echo "üêç Python files changed" >> $GITHUB_STEP_SUMMARY
          fi
          if [[ "${{ needs.detect-changes.outputs.flutter-changed }}" == "true" ]]; then
            echo "üì± Flutter files changed" >> $GITHUB_STEP_SUMMARY
          fi
          if [[ "${{ needs.detect-changes.outputs.supabase-changed }}" == "true" ]]; then
            echo "‚ö° Supabase files changed" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Test results
          echo "### üß™ Test Results" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ needs.python-tests.result }}" == "success" ]]; then
            echo "‚úÖ Python tests passed" >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ needs.python-tests.result }}" == "failure" ]]; then
            echo "‚ùå Python tests failed" >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ needs.detect-changes.outputs.python-changed }}" == "true" ]]; then
            echo "‚è≠Ô∏è Python tests skipped" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.flutter-tests.result }}" == "success" ]]; then
            echo "‚úÖ Flutter tests passed" >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ needs.flutter-tests.result }}" == "failure" ]]; then
            echo "‚ùå Flutter tests failed" >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ needs.detect-changes.outputs.flutter-changed }}" == "true" ]]; then
            echo "‚è≠Ô∏è Flutter tests skipped" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.supabase-tests.result }}" == "success" ]]; then
            echo "‚úÖ Supabase tests passed" >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ needs.supabase-tests.result }}" == "failure" ]]; then
            echo "‚ùå Supabase tests failed" >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ needs.detect-changes.outputs.supabase-changed }}" == "true" ]]; then
            echo "‚è≠Ô∏è Supabase tests skipped" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Deployment results
          echo "### üöÄ Deployment Results" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ needs.deploy-supabase.result }}" == "success" ]]; then
            echo "‚úÖ Supabase functions deployed" >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ needs.deploy-supabase.result }}" == "failure" ]]; then
            echo "‚ùå Supabase deployment failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.deploy-flutter.result }}" == "success" ]]; then
            echo "‚úÖ Flutter web app deployed to Cloudflare" >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ needs.deploy-flutter.result }}" == "failure" ]]; then
            echo "‚ùå Flutter deployment failed" >> $GITHUB_STEP_SUMMARY
          fi
